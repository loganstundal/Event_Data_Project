
#-----------------------------------------------------------------------------#
#                                                                             #
# Author:   Logan Stundal                                                     #
# Date:     November 12, 2019                                                 #
# Purpose:  Israel - Data Tidying                                             #
#                                                                             #
#-----------------------------------------------------------------------------#

# Note -- Default encoding: ISO8859-1.
#         Changed to UTF-8 on Nov. 16 to save shekel symbol in income factor

# Administrative --------------------------------------------------------------

rm(list=ls())

# To tidy data
library(tidyverse)
library(scales)
# library(gridExtra)
# library(descr)

# https://stats.idre.ucla.edu/r/dae/ordinal-logistic-regression/ # For infor on ordered logits
# remotes::install_github("leeper/margins")
# https://github.com/leeper/margins

library(margins)

setwd("C:/Users/logan/GoogleDrive/UMN/classes/2019 fall/ra - ron/deference survey")

# LOAD DATA
d <- haven::as_factor(haven::read_dta('Data/iPanel Full Study.dta'))


# Data formatting -------------------------------------------------------------
#-----------------------------------------------------------------------------#

israel <- d %>%
  filter(q27      == 2,
         finished == 1,
         progress == 100) %>%
  rename(
         participate  = q2,
         
         # Demographic variables:
         gender         = q54,
         age            = q55,
         israel_born    = q195,
         ethnicity      = q60,
         religiosity    = q200,
         education      = q62,
         income         = q64,
         hh_rooms       = q67,
         hh_residents   = q102,
         hh_children    = q103,
         israel_citizen = q101,
         
         # Political characteristics:
         voted          = q207,
         ideology       = q43,
         hawkishness    = q42,

         # Pretreatment political variables (institution feeling thermometers)
         # (sc - supreme court)
         therm_sc      = q4_1,
         therm_knesset = q4_2,
         therm_IDF     = q4_5,
         therm_police  = q4_6,
         
         # Why do people join the military?
         # Reasons for joining (citizens, love of country, economic)
         why_join      = q5,
         
         # Percent of officers respondent believes join for these reasons:
         why_join_per_cit   = q206_1,
         why_join_per_pat   = q206_2,
         why_join_per_emp   = q206_3,
         
         
         # Respondent military service record
         mil_served     = q49,
         mil_job_type   = q51,
         mil_officer    = q53,
         
         # OUTCOME Variable 1 - Support Mission
         mission_favor  = q137,
         
         # OUTCOME Variable 2 -- Force increase
         force_increase = q139,
         
         # Additional controls
         harm       = q220,
         oblig      = q222,
         
         # Perceptions about D
         d_ideology = q178,
         d_approve  = q179,
         d_ethnicity= q176,
         d_ses      = q177,
         d_perform  = q227_4
         ) %>%
  
  # Recode values [NOTE --- THIS BLOCK CAN BE EASILY SWITCHED OFF TO PRESERVE ORIGINAL NUMERIC VALUES]
  mutate(gender = fct_recode(as_factor(gender), 
                             Male = '1', Female = '2'),
         female   = case_when(gender == 'Female' ~ 1, 
                              TRUE ~ 0),

         age_orig = age,
         age    = fct_recode(as_factor(age),
                            '18-29' = '1',
                            '30-39' = '2',
                            '40-49' = '3',
                            '50-59' = '4',
                            '60-69' = '5',
                            '70+'   = '6'),

         religiosity_orig = as.numeric(religiosity),
         religiosity = fct_recode(as_factor(religiosity),
                                  'Orthodox'    = '1',
                                  'Religious'   = '2',
                                  'Traditional' = '3',
                                  'Traditional' = '4',
                                  'Secular'     = '5',
                                  'Don\'t know / Refused' = '6'), 

         education_orig = education, 
         education_orig = as.numeric(fct_explicit_na(as_factor(education), 
                                                     na_level = '9')),
         education = fct_recode(as_factor(education),
                                'Primary' = '1',
                                'Primary' = '2',
                                'Primary' = '3',
                                'HS with Matriculation' = '4',
                                'Higher Education' = '5',
                                'Higher Education' = '6',
                                'Higher Education' = '7',
                                'Higher Education' = '8',
                                'Don\'t know / Refused' = '9'),
         
         income_orig = income,
         income_orig = as.numeric(fct_recode(as_factor(income_orig),
                                  '2' = '4',
                                  '4' = '5',
                                  '5' = '6',
                                  '6' = '7',
                                  '7' = '8',
                                  '8' = '9',
                                  '9' = '10',
                                  '10' = '11')),
         income = fct_recode(as_factor(income),
                             'Less than 3000' = '1',
                             '3001-4500'      = '4',
                             '4501-6000'      = '3',
                             '6001-8000'      = '5',
                             '8001-10000'     = '6',
                             '10001-12000'    = '7',
                             '12001-14000'    = '8',
                             '14001-16000'    = '9',
                             '16001-20000'    = '10',
                             'More than 20000'= '11'),
         income = fct_relevel(income, '3001-4500', after = 1),
         
         ethnicity = fct_recode(as_factor(ethnicity),   # May be translation error here, check.
                                'Ashkenazi' = '1',
                                'Sephardi'  = '2',
                                'Mizrachi'  = '3',
                                'Mixed'     = '4',
                                'Do not define myself by ethnic origin' = '5'),
         Ashkenazi = case_when(ethnicity == 'Ashkenazi' ~ 1,
                               TRUE ~ 0),
         israel_born = fct_recode(as_factor(israel_born),
                                  'Israel' = '1',
                                  'Other'  = '2'),
         israel_citizen = fct_recode(as_factor(israel_citizen),
                                     'Yes' = '1',
                                     'No'  = '2'),
         
         ideology_orig = ideology, 
         ideology_orig = as.numeric(fct_explicit_na(as_factor(ideology), 
                                                    na_level = '9')),
         ideology = fct_recode(as_factor(ideology),
                               'Left'           = '1',
                               'Moderate Left'  = '2',
                               'Center'         = '3',
                               'Moderate Right' = '4',
                               'Right'          = '5',
                               'Don\'t know / Refused' = '6'),
         
         mil_served_bin = case_when(mil_served == 1 ~ 1,
                                TRUE ~ 0),
         mil_served = fct_recode(as_factor(mil_served),
                                  'Yes'              = '1',
                                  'National Service' = '2',
                                  'Army but not IDF' = '5',
                                  'No'               = '6',
                                  'Don\'t know / Refused' = '7'),
         mil_job_type = fct_recode(as_factor(mil_job_type),
                                    'Combat'   = '1',
                                    'Support'  = '2',
                                    'Back-end' = '3',
                                    'Other'    = '4'),
         mil_officer = fct_recode(as_factor(mil_officer),
                                   'Yes' = '1',
                                   'No'  = '2',
                                   'Don\'t know / Refused' = '3'),
         mission_favor_orig = mission_favor,
         mission_favor = fct_recode(as_factor(mission_favor),
                                    'Strongly support' = '1',
                                    'Support'          = '2',
                                    'Somewhat support' = '3',
                                    'Neutral'          = '4',
                                    'Somewhat oppose'  = '5',
                                    'Oppose'           = '6',
                                    'Strongly oppose'  = '7'),
         mission_favor_bin = case_when(mission_favor %in% c('Strongly support',
                                                         'Support',
                                                         'Somewhat support') ~ 1,
                                    TRUE ~ 0),
         
         force_increase_orig = force_increase,
         force_increase      = fct_recode(as_factor(force_increase),
                                     'Strongly support' = '1',
                                     'Support'          = '2',
                                     'Somewhat support' = '3',
                                     'Neutral'          = '4',
                                     'Somewhat oppose'  = '5',
                                     'Oppose'           = '6',
                                     'Strongly oppose'  = '7'),
         force_increase_bin  = case_when(force_increase %in% c('Strongly support',
                                                           'Support',
                                                           'Somewhat support') ~ 1,
                                     TRUE ~ 0),
         
         sensitivity = case_when(q141 == 1 | 
                                 q142 == 1 |
                                 q143 == 1 | 
                                 q144 == 1 ~ 1, 
                                 TRUE ~ 0),
         
         why_join_cit = case_when(why_join == 1 ~ 1,
                                  TRUE ~ 0),
         why_join_pat = case_when(why_join == 2 ~ 1, 
                                  TRUE ~ 0),
         why_join_emp = case_when(why_join == 3 ~ 1,
                                  TRUE ~ 0),
         
         why_join = fct_recode(as_factor(why_join),
                               'Citizen'  = '1',
                               'Patriot'  = '2',
                               'Employee' = '3'),
         
         strong_believer = case_when(why_join_per_cit >= 50 | 
                                     why_join_per_emp >= 50 |
                                     why_join_per_pat >= 50 ~ 1,
                                     TRUE ~ 0),
         
         d_con = case_when(d_ideology == 1 ~ 1,
                           TRUE ~ 0),
         d_mod = case_when(d_ideology == 2 ~ 1, 
                           TRUE ~ 0),
         d_lib = case_when(d_ideology == 3 ~ 1, 
                           TRUE ~ 0),
         
         d_ethnicity2 = case_when(d_ethnicity == 1 ~ 'Ashkenazi',
                                  d_ethnicity %in% c(2,3) ~ 'Non-Ashkenazi',
                                  TRUE ~ 'Unknown'),
         
         d_ses2 = case_when(d_ses == 1 ~ 'Wealthy',
                            d_ses == 2 ~ 'Middle-class',
                            d_ses == 3 ~ 'Disadvantaged',
                            TRUE ~ 'Unknown'), 
         
         d_ideology2 = case_when(d_ideology == 1 ~ 'Conservative',
                                 d_ideology == 2 ~ 'Moderate',
                                 d_ideology == 3 ~ 'Liberal',
                                 d_ideology == 4 ~ 'Without strong views',
                                 TRUE ~ 'Unknown'),
         
         d_approve2  = fct_recode(as_factor(d_approve),
                                  'Support'           = '1',
                                  'Somewhat supports' = '2',
                                  'Unsure'            = '3',
                                  'Somewhat opposes'  = '4',
                                  'Opposes'           = '5'),
         # d_approve_bin = case_when(d_approve %in% c('Support','Somewhat supports') ~ 1,
         #                           TRUE ~ 0),
         
         d_perform2 = case_when(d_perform == 1 ~ 'Very bad',
                                d_perform == 2 ~ 'Bad',
                                d_perform == 3 ~ 'Somewhat bad',
                                d_perform == 4 ~ 'Neutral',
                                d_perform == 5 ~ 'Somewhat good',
                                d_perform == 6 ~ 'Good',
                                d_perform == 7 ~ 'Very good')
         )

israel <- israel %>%
  
  # Create Psychological variables 
  mutate(
    # Blind patriotism
          q14 = recode(q14, `1` = 7, `2` = 6, `3` = 5, `5` = 3, `6` = 2, `7` = 1),
          q15 = recode(q15, `1` = 7, `2` = 6, `3` = 5, `5` = 3, `6` = 2, `7` = 1),
          q16 = recode(q16, `1` = 7, `2` = 6, `3` = 5, `5` = 3, `6` = 2, `7` = 1),
          q17 = recode(q17, `1` = 7, `2` = 6, `3` = 5, `5` = 3, `6` = 2, `7` = 1),      
          bp  = rowSums(.[,c('q14','q15','q16','q17')]),
  
    # Right wing orientation       
          q21 = recode(q21, `1` = 7, `2` = 6, `3` = 5, `5` = 3, `6` = 2, `7` = 1),
          rwa = rowSums(.[,c('q21','q22')]),
         
    # Social dominance orientation
          q24 = recode(q24, `1` = 7, `2` = 6, `3` = 5, `5` = 3, `6` = 2, `7` = 1),        # Should q23 also be recoded?
          sdo = rowSums(.[,c('q23','q24','q28','q29')]),
    
    # Scale variables for compaisons
          # ideology2  = .scaler(ideology),
          # age2       = .scaler(age),
          # education2 = .scaler(education),
          # income2    = .scaler(income),
    
    # Experimental treatments
        # Employee frame
        trtmt_employee = case_when(is.na(q122) == F ~ 1,
                                   TRUE ~ 0),
        manip1   = case_when(q122 == 1 ~ 1, 
                             TRUE ~ 0),
        
        # Citizen / patriot frame
        trtmt_citizen = case_when(is.na(q129) == F ~ 1,
                                  TRUE ~ 0),
        manip2  = case_when(q129 == 2 ~ 1,
                            TRUE ~ 0),
        
        # Control frame
        trtmt_control = case_when(is.na(q133) == F ~ 1,
                                  TRUE ~ 0),
        manip3  = case_when(q133 == 3 ~ 1,
                            TRUE ~ 0)) %>%
  
  # Combine manipulation checks
        mutate(check  = rowSums(.[,c('manip1','manip2','manip3')]))


# Save data -------------------------------------------------------------------
#-----------------------------------------------------------------------------#

write_csv(israel, path = 'israel.csv')
save(israel, file = 'israel.RData')


