//-----------------------------------------------------------------------------
//                                                                             
// Author:        Logan Stundal                                                    
// Date:          January 19, 2020                                                 
// Purpose:       Colombia, Event data project, Forest cover extract                      
//                                                                             
//
// Copyright (c): Logan Stundal, 2020                      
// Email:         stund005@umn.edu
//
//----------------------------------------------------------------------------- 
//
// Notes:                              
//        - This script loads in the 'GLCF/GLS_TCC' raster from 2005 and
//          extracts the 'tree_canopy_cover' variable.
//              - This raster is a 30 meter pixel resolution.
//
//              - https://developers.google.com/earth-engine/datasets/catalog/GLCF_GLS_TCC
//
//        - "The Landsat Vegetation Continuous Fields (VCF) tree cover layers contain 
//           estimates of the percentage of horizontal ground in each 30-m pixel covered 
//           by woody vegetation greater than 5 meters in height."
//
//        - The raster is clipped to the extent of Colombia's national border
//          based on GADM level 0 boundaries. 
//
//        - Percent forest cover is aggregated to municipalities using a 
//          mean smoothing function.
//
//        - For future reference, on slider for image change:
//          https://gis.stackexchange.com/questions/340289/change-palette-color-in-google-earth-engine
//
//-----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// ADMINISTRATIVE -------------------------------------------------------------

// Define a region for the full plot scope
var plt_region = ee.Geometry.Polygon(
        [[[-79.99492187499999, 12.688250409446889],
          [-79.99492187499999, -4.428897941997978],
          [-65.88847656249999, -4.428897941997978],
          [-65.88847656249999, 12.688250409446889]]], null, false);

// Import raster data
var forest = ee.ImageCollection('GLCF/GLS_TCC')
                  .filter(ee.Filter.date('2005-01-01', '2005-12-31'))  //.map(clipToCol)
                  .select('tree_canopy_cover').mean().clip(colombia_lvl0);


//-----------------------------------------------------------------------------
// MAP ------------------------------------------------------------------------
//Map.addLayer(forest); // Verification of data


//-----------------------------------------------------------------------------
// EXPORT ---------------------------------------------------------------------
/* Note, scale parameter in METERS, so .5km here. This reduces the pixel resolution allowing 
us to save a visual representation of the data. But, we cannot use this for spatial calculations
which is why they are performed here on the raw data and exported as a csv. */

Export.image.toDrive({
  image:        forest,
  description: 'Colombia_ForestCover_2005',
  folder:      'Colombia',
  scale:       500,
  region:      plt_region
}); 


//-----------------------------------------------------------------------------
// AGGREGATE FOREST COVER (PERCENT) TO MUNICIPALITIES -------------------------
var forest_dat = forest.reduceRegions({
  collection: colombia_lvl2,
  reducer:    ee.Reducer.mean(),
  scale:      30 // the resolution of the GLCF/GLS_TCC dataset
});



// drop .geo column
var forestMeanOut = forest_dat.select(['admin2Pcod','admin2RefN','mean'],null,false);


// Table to Drive Export Example
Export.table.toDrive({
  collection:  forestMeanOut,
  description: 'Colombia_ForestCover_municipality_2005',
  folder:      'Colombia',
  fileFormat:  'CSV'
});   


//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------



//-----------------------------------------------------------------------------
//                                                                             
// Author:        Logan Stundal                                                    
// Date:          January 19, 2020                                                 
// Purpose:       Note                      
//                                                                             
//
// Copyright (c): Logan Stundal, 2020                      
// Email:         stund005@umn.edu
//
//----------------------------------------------------------------------------- 
//
// Notes:                              
//        - This script loads NOAA'S 'DMSP-OLS/NIGHTTIME_LIGHTS' raster from 2002 to 2009 and
//          extracts the means of 'stable_lights' over that time period.
//              - This raster has a 1000 meter pixel resolution.
//
//              - https://developers.google.com/earth-engine/datasets/catalog/NOAA_DMSP-OLS_NIGHTTIME_LIGHTS
//
//        - The raster is clipped to the extent of Colombia's national border
//          based on GADM level 0 boundaries. 
//
//        - Percent night lights cover is aggregated to municipalities using a 
//          mean smoothing function.
//
//        - For future reference, on slider for image change:
//          https://gis.stackexchange.com/questions/340289/change-palette-color-in-google-earth-engine
//
//-----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// ADMINISTRATIVE -------------------------------------------------------------

// Define a region for the full plot scope
var plt_region = ee.Geometry.Polygon(
        [[[-79.99492187499999, 12.688250409446889],
          [-79.99492187499999, -4.428897941997978],
          [-65.88847656249999, -4.428897941997978],
          [-65.88847656249999, 12.688250409446889]]], null, false);

// Import raster data
var nl= ee.ImageCollection('NOAA/DMSP-OLS/NIGHTTIME_LIGHTS')
        .filter(ee.Filter.date('2002-01-01', '2009-12-31')) 
        .select('stable_lights').mean().clip(colombia_lvl0);


//-----------------------------------------------------------------------------
// MAP ------------------------------------------------------------------------
//Map.addLayer(nl); // Verification of data


//-----------------------------------------------------------------------------
// EXPORT ---------------------------------------------------------------------
/* Note, scale parameter in METERS, so .5km here. This reduces the pixel resolution allowing 
us to save a visual representation of the data. But, we cannot use this for spatial calculations
which is why they are performed here on the raw data and exported as a csv. */

Export.image.toDrive({
  image:        nl,
  description: 'Colombia_NightLights_2002_2009_mean',
  folder:      'Colombia',
  scale:       1000,
  region:      plt_region
}); 


//-----------------------------------------------------------------------------
// AGGREGATE FOREST COVER (PERCENT) TO MUNICIPALITIES -------------------------
var nl_dat = nl.reduceRegions({
  collection: colombia_lvl2,
  reducer:    ee.Reducer.mean(),
  scale:      1000
});



// drop .geo column
var nlMeanOut = nl_dat.select(['admin2Pcod','admin2RefN','mean'],null,false);


// Table to Drive Export Example
Export.table.toDrive({
  collection:  nlMeanOut,
  description: 'Colombia_NightLights_municipality_2002_2009_mean',
  folder:      'Colombia',
  fileFormat:  'CSV'
});   


//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------



//-----------------------------------------------------------------------------
//                                                                             
// Author:        Logan Stundal                                                    
// Date:          January 19, 2020                                                 
// Purpose:       Note                      
//                                                                             
//
// Copyright (c): Logan Stundal, 2020                      
// Email:         stund005@umn.edu
//
//----------------------------------------------------------------------------- 
//
// Notes:                              
//        - This script loads Earth Environment's "Terrain Roughness Index" raster.
//              - This raster has a 1000 meter or 30-arc second (at equator) pixel resolution.
//
//              - http://www.earthenv.org/topography
//
//        - The raster is clipped to the extent of Colombia's national border
//          based on GADM level 0 boundaries. 
//
//        - TRI is aggregated to municipalities using a mean smoothing function.
//
//        - For future reference, on slider for image change:
//          https://gis.stackexchange.com/questions/340289/change-palette-color-in-google-earth-engine
//
//-----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// ADMINISTRATIVE -------------------------------------------------------------

// Define a region for the full plot scope
var plt_region = ee.Geometry.Polygon(
        [[[-79.99492187499999, 12.688250409446889],
          [-79.99492187499999, -4.428897941997978],
          [-65.88847656249999, -4.428897941997978],
          [-65.88847656249999, 12.688250409446889]]], null, false);

var tri = tri.clip(colombia_lvl0)


//-----------------------------------------------------------------------------
// MAP ------------------------------------------------------------------------
//Map.addLayer(tri); // Verification of data


//-----------------------------------------------------------------------------
// EXPORT ---------------------------------------------------------------------
/* Note, scale parameter in METERS, so .5km here. This reduces the pixel resolution allowing 
us to save a visual representation of the data. But, we cannot use this for spatial calculations
which is why they are performed here on the raw data and exported as a csv. */

Export.image.toDrive({
  image:        tri,
  description: 'Colombia_TRI_mean',
  folder:      'Colombia',
  scale:       1000,
  region:      plt_region
}); 


//-----------------------------------------------------------------------------
// AGGREGATE FOREST COVER (PERCENT) TO MUNICIPALITIES -------------------------
var tri_dat = tri.reduceRegions({
  collection: colombia_lvl2,
  reducer:    ee.Reducer.mean(),
  scale:      1000
});



// drop .geo column
var triMeanOut = tri_dat.select(['admin2Pcod','admin2RefN','mean'],null,false);


// Table to Drive Export Example
Export.table.toDrive({
  collection:  triMeanOut,
  description: 'Colombia_TRI_municipality_mean',
  folder:      'Colombia',
  fileFormat:  'CSV'
});   


//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------




//-----------------------------------------------------------------------------
//                                                                             
// Author:        Logan Stundal                                                    
// Date:          January 19, 2020                                                 
// Purpose:       Note                      
//                                                                             
//
// Copyright (c): Logan Stundal, 2020                      
// Email:         stund005@umn.edu
//
//----------------------------------------------------------------------------- 
//
// Notes:                              
//        - This script loads World Pop's 'WorldPop/GP/100m/pop' raster from 2002 to 2009 and
//          extracts the mean yearly 'population' over that time period.
//              - This raster has a 100 meter pixel resolution.
//
//              - https://developers.google.com/earth-engine/datasets/catalog/WorldPop_GP_100m_pop
//
//        - The raster is clipped to the extent of Colombia's national border
//          based on GADM level 0 boundaries. 
//
//        - Population total is aggregated to municipalities using a sum smoothing function.
//
//        - For future reference, on slider for image change:
//          https://gis.stackexchange.com/questions/340289/change-palette-color-in-google-earth-engine
//
//-----------------------------------------------------------------------------


//-----------------------------------------------------------------------------
// ADMINISTRATIVE -------------------------------------------------------------

// Define a region for the full plot scope
var plt_region = ee.Geometry.Polygon(
        [[[-79.99492187499999, 12.688250409446889],
          [-79.99492187499999, -4.428897941997978],
          [-65.88847656249999, -4.428897941997978],
          [-65.88847656249999, 12.688250409446889]]], null, false);

// Import raster data
var wp = ee.ImageCollection('WorldPop/GP/100m/pop')
         .filter(ee.Filter.date('2002-01-01', '2009-12-31')) 
         .select('population').mean().clip(colombia_lvl0);


//-----------------------------------------------------------------------------
// MAP ------------------------------------------------------------------------
//Map.addLayer(wp); // Verification of data


//-----------------------------------------------------------------------------
// EXPORT ---------------------------------------------------------------------
/* Note, scale parameter in METERS, so .5km here. This reduces the pixel resolution allowing 
us to save a visual representation of the data. But, we cannot use this for spatial calculations
which is why they are performed here on the raw data and exported as a csv. */

Export.image.toDrive({
  image:        nl,
  description: 'Colombia_Population_2002_2009_mean',
  folder:      'Colombia',
  scale:       1000,
  region:      plt_region
}); 


//-----------------------------------------------------------------------------
// AGGREGATE FOREST COVER (PERCENT) TO MUNICIPALITIES -------------------------
var wp_dat = wp.reduceRegions({
  collection: colombia_lvl2,
  reducer:    ee.Reducer.sum(),
  scale:      100
});



// drop .geo column
var wpMeanOut = wp_dat.select(['admin2Pcod','admin2RefN','mean'],null,false);


// Table to Drive Export Example
Export.table.toDrive({
  collection:  wpMeanOut,
  description: 'Colombia_Population_municipality_2002_2009_mean',
  folder:      'Colombia',
  fileFormat:  'CSV'
});   


//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------



